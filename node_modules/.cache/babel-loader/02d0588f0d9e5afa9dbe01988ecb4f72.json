{"ast":null,"code":"import _objectSpread from\"C:/Users/jessi/DeliBook/delibook-client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/jessi/DeliBook/delibook-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useEffect,useState}from'react';import{Button}from'react-bootstrap';import{LinkContainer}from'react-router-bootstrap';import MealCard from'../../components/MealCard/mealcard';import{MyContext}from'../../context';import'./favorites.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FavoritesPage(){var _useContext=useContext(MyContext),user=_useContext.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),favorites=_useState2[0],setFavorites=_useState2[1];useEffect(function(){if(user.favorites.length){// accessing user favorites to pass it to TheMealDB API url to search the meal\nvar requests=user.favorites.map(function(favorite){return fetch(\"https://www.themealdb.com/api/json/v1/1/lookup.php?i=\".concat(favorite)).then(function(res){return res.json();});});Promise.all(requests).then(function(res){return setFavorites(res);});}},[user]);// show \"add new favorites\" button if there is no favorites found\nif(!user.favorites.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"empty-fav\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"You don't have any favorites yet\"}),/*#__PURE__*/_jsx(LinkContainer,{to:\"/\",children:/*#__PURE__*/_jsx(Button,{className:\"add-fav-btn\",variant:\"link\",children:\"Add new favorites\"})})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your favorites\"}),/*#__PURE__*/_jsx(\"div\",{className:\"meals-container\",children:favorites.map(function(_ref){var meal=_ref.meals;return/*#__PURE__*/ (// ^ mapping the user favorites from use state to pass into meal cards and display it\n// v using optional chaining to check if the meals exists, if not it will just return as undefined\n_jsx(MealCard,_objectSpread({},meal===null||meal===void 0?void 0:meal[0]),meal===null||meal===void 0?void 0:meal[0].idMeal));})})]});}export default FavoritesPage;","map":{"version":3,"names":["React","useContext","useEffect","useState","Button","LinkContainer","MealCard","MyContext","FavoritesPage","user","favorites","setFavorites","length","requests","map","favorite","fetch","then","res","json","Promise","all","meal","meals","idMeal"],"sources":["C:/Users/jessi/DeliBook/delibook-client/src/pages/Favorites/favorites.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport MealCard from '../../components/MealCard/mealcard';\r\nimport { MyContext } from '../../context';\r\nimport './favorites.css';\r\n\r\nfunction FavoritesPage() {\r\n    const {user} = useContext(MyContext);\r\n    const [favorites, setFavorites] = useState([]);\r\n    useEffect(() => {\r\n        if(user.favorites.length){\r\n            // accessing user favorites to pass it to TheMealDB API url to search the meal\r\n            const requests = user.favorites.map((favorite) => fetch(\r\n                `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${favorite}`\r\n                ).then((res) => res.json()));\r\n\r\n            Promise.all(requests).then((res) => setFavorites(res));\r\n        }\r\n    }, [user]);\r\n\r\n    // show \"add new favorites\" button if there is no favorites found\r\n    if (!user.favorites.length){\r\n        return (\r\n            <div className='empty-fav'>\r\n                <h2>You don't have any favorites yet</h2>\r\n                <LinkContainer to=\"/\">\r\n                    <Button className='add-fav-btn' variant=\"link\">Add new favorites</Button>\r\n                </LinkContainer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n  return (\r\n\r\n    <div>\r\n        <h2>Your favorites</h2>\r\n        <div className='meals-container'>\r\n        {favorites.map(({meals: meal}) => (\r\n            // ^ mapping the user favorites from use state to pass into meal cards and display it\r\n            // v using optional chaining to check if the meals exists, if not it will just return as undefined\r\n            <MealCard key = {meal?.[0].idMeal} {...meal?.[0]}/>\r\n      ))}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoritesPage;"],"mappings":"yPAAA,MAAOA,MAAK,EAAIC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC9D,OAASC,MAAM,KAAQ,iBAAiB,CACxC,OAASC,aAAa,KAAQ,wBAAwB,CACtD,MAAOC,SAAQ,KAAM,oCAAoC,CACzD,OAASC,SAAS,KAAQ,eAAe,CACzC,MAAO,iBAAiB,CAAC,wFAEzB,QAASC,cAAa,EAAG,CACrB,gBAAeP,UAAU,CAACM,SAAS,CAAC,CAA7BE,IAAI,aAAJA,IAAI,CACX,cAAkCN,QAAQ,CAAC,EAAE,CAAC,wCAAvCO,SAAS,eAAEC,YAAY,eAC9BT,SAAS,CAAC,UAAM,CACZ,GAAGO,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,CACrB;AACA,GAAMC,SAAQ,CAAGJ,IAAI,CAACC,SAAS,CAACI,GAAG,CAAC,SAACC,QAAQ,QAAKC,MAAK,gEACKD,QAAQ,EAC/D,CAACE,IAAI,CAAC,SAACC,GAAG,QAAKA,IAAG,CAACC,IAAI,EAAE,GAAC,GAAC,CAEhCC,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC,CAACI,IAAI,CAAC,SAACC,GAAG,QAAKP,aAAY,CAACO,GAAG,CAAC,GAAC,CAC1D,CACJ,CAAC,CAAE,CAACT,IAAI,CAAC,CAAC,CAEV;AACA,GAAI,CAACA,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,CACvB,mBACI,aAAK,SAAS,CAAC,WAAW,wBACtB,wDAAyC,cACzC,KAAC,aAAa,EAAC,EAAE,CAAC,GAAG,uBACjB,KAAC,MAAM,EAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,+BAA2B,EAC7D,GACd,CAEd,CAEF,mBAEE,oCACI,sCAAuB,cACvB,YAAK,SAAS,CAAC,iBAAiB,UAC/BF,SAAS,CAACI,GAAG,CAAC,kBAASQ,KAAI,MAAXC,KAAK,qBAClB;AACA;AACA,KAAC,QAAQ,kBAA8BD,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAG,CAAC,CAAC,EAA/BA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAG,CAAC,CAAC,CAACE,MAAM,CAAkB,GACxD,CAAC,EACE,GACA,CAEV,CAEA,cAAehB,cAAa"},"metadata":{},"sourceType":"module"}
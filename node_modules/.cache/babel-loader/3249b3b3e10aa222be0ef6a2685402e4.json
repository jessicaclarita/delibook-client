{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jessi\\\\DeliBook\\\\delibook-client\\\\src\\\\components\\\\MealsContainer\\\\mealscontainer.js\";\nimport React from 'react';\nimport MealCard from '../MealCard/mealcard';\nimport './mealscontainer.css';\nimport Alert from 'react-bootstrap/Alert';\n\n// container for meal cards\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MealsContainer(_ref) {\n  let {\n    meals\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    /* using map to loop and show something for each meal */\n    _jsxDEV(\"div\", {\n      className: \"meals-container\",\n      children: [!meals &&\n      /*#__PURE__*/\n      // if meals inserted in search input cannot be found from the API\n      _jsxDEV(Alert, {\n        className: \"mt-5\",\n        variant: \"warning\",\n        children: \"Sorry, could not find this recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), meals === null || meals === void 0 ? void 0 : meals.map(meal =>\n      /*#__PURE__*/\n      // map meals and populate the meal properties if meals can be found\n      _jsxDEV(MealCard, {\n        ...meal\n      }, meal.idMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = MealsContainer;\nexport default MealsContainer;\nvar _c;\n$RefreshReg$(_c, \"MealsContainer\");","map":{"version":3,"names":["React","MealCard","Alert","MealsContainer","meals","map","meal","idMeal"],"sources":["C:/Users/jessi/DeliBook/delibook-client/src/components/MealsContainer/mealscontainer.js"],"sourcesContent":["import React from 'react';\r\nimport MealCard from '../MealCard/mealcard';\r\nimport './mealscontainer.css';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n// container for meal cards\r\nfunction MealsContainer({meals}) \r\n{\r\n  return (\r\n    /* using map to loop and show something for each meal */\r\n    <div className='meals-container'>\r\n      {!meals && // if meals inserted in search input cannot be found from the API\r\n      <Alert className=\"mt-5\" variant='warning'>\r\n          Sorry, could not find this recipe\r\n      </Alert>\r\n      }\r\n      {meals?.map((meal) => ( // map meals and populate the meal properties if meals can be found\r\n        <MealCard key = {meal.idMeal} {...meal}/>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MealsContainer;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,uBAAuB;;AAEzC;AAAA;AACA,SAASC,cAAc,OACvB;EAAA,IADwB;IAACC;EAAK,CAAC;EAE7B;IAAA;IACE;IACA;MAAK,SAAS,EAAC,iBAAiB;MAAA,WAC7B,CAACA,KAAK;MAAA;MAAI;MACX,QAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEjC,EAEPA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,GAAG,CAAEC,IAAI;MAAA;MAAO;MACtB,QAAC,QAAQ;QAAA,GAAyBA;MAAI,GAArBA,IAAI,CAACC,MAAM;QAAA;QAAA;QAAA;MAAA,QAC7B,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACE;AAEV;AAAC,KAfQJ,cAAc;AAiBvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}